on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials for Production
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_PRODUCTION }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Format
        working-directory: infra
        run: terraform fmt

      - name: Terraform Init
        working-directory: infra
        run: |
          terraform init -backend-config="bucket=aws-microservice-processor-$ENV"
          terraform workspace list
          terraform workspace select production || terraform workspace new production
        env:
          ENV: production
        
      - name: Terraform Validate
        working-directory: infra
        run: |
          terraform init -backend=false
          terraform validate

      - name: Terraform Plan
        working-directory: infra
        run: |
          terraform workspace list
          terraform workspace select production || terraform workspace new production
          terraform plan
        env:
          ENV: production

      - name: Terraform Apply
        working-directory: infra
        run: |
          terraform workspace list
          terraform workspace select production || terraform workspace new production
          terraform apply -auto-approve
        env:
          ENV: production

      - shell: bash
        working-directory: infra
        run: |
          echo "SQS_ARN=`terraform output sqs_arn`" >> $GITHUB_ENV

      - name: Serverless Deploy
        run: |
          npm install
          npm run deploy
        env:
          ENV: production
          AWS_ASSUME_ROLE_ARN: ${{ secrets.AWS_ROLE_TO_ASSUME_PRODUCTION }}
